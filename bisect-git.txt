[deemde@Misomiso ~]$ git clone https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git
Cloning into 'linux-stable'...
remote: Counting objects: 5676911, done.
remote: Compressing objects: 100% (86566/86566), done.
remote: Total 5676911 (delta 425569), reused 511707 (delta 424606)
Receiving objects: 100% (5676911/5676911), 1.03 GiB | 14.37 MiB/s, done.
Resolving deltas: 100% (4757224/4757224), done.
Checking out files: 100% (57202/57202), done.
[deemde@Misomiso ~]$ cd linux-stable/
[deemde@Misomiso linux-stable]$ git bisect start
[deemde@Misomiso linux-stable]$ git bisect good v4.9.8
[deemde@Misomiso linux-stable]$ git bisect bad v4.9.9
Bisecting: 33 revisions left to test after this (roughly 5 steps)
[04eb7db25bb1bcf4ee1631d1099fc03308929c12] mmc: sdhci: Ignore unexpected CARD_INT interrupts
[deemde@Misomiso linux-stable]$ git bisect good 04eb7db25bb1bcf4ee1631d1099fc03308929c12
Bisecting: 16 revisions left to test after this (roughly 4 steps)
[8bc382a9652bc17277caf2c3d9dad6d0b55bb7db] USB: serial: qcserial: add Dell DW5570 QDL
[deemde@Misomiso linux-stable]$ git bisect good 8bc382a9652bc17277caf2c3d9dad6d0b55bb7db
Bisecting: 8 revisions left to test after this (roughly 3 steps)
[5f0ee562605b4290959675830273d5485616d0cd] iio: health: afe4404: retrieve a valid iio_dev in suspend/resume
[deemde@Misomiso linux-stable]$ git bisect good 5f0ee562605b4290959675830273d5485616d0cd
Bisecting: 4 revisions left to test after this (roughly 2 steps)
[e02136282296dbc90f3c88b1cc5202ec0d5ed9f1] irqdomain: Avoid activating interrupts more than once
[deemde@Misomiso linux-stable]$ git bisect skip e02136282296dbc90f3c88b1cc5202ec0d5ed9f1
Bisecting: 3 revisions left to test after this (roughly 2 steps)
[13363b6988f60be9f75146a52476a5e8d55f503c] x86/irq: Make irq activate operations symmetric
[deemde@Misomiso linux-stable]$ git bisect good 13363b6988f60be9f75146a52476a5e8d55f503c
Bisecting: 1 revision left to test after this (roughly 1 step)
[72cd604cfd864b06c5a10d2bb139b19825e0fcbc] fs: break out of iomap_file_buffered_write on fatal signals
[deemde@Misomiso linux-stable]$ git bisect good 72cd604cfd864b06c5a10d2bb139b19825e0fcbc
Bisecting: 0 revisions left to test after this (roughly 0 steps)
[f2a0409a08502d64fbe3990354dff5902b08d2fb] drm/i915/execlists: Reset RING registers upon resume
[deemde@Misomiso linux-stable]$ git bisect bad f2a0409a08502d64fbe3990354dff5902b08d2fb
f2a0409a08502d64fbe3990354dff5902b08d2fb is the first bad commit
commit f2a0409a08502d64fbe3990354dff5902b08d2fb
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Sep 21 14:51:08 2016 +0100

    drm/i915/execlists: Reset RING registers upon resume
    
    commit bafb2f7d4755bf1571bd5e9a03b97f3fc4fe69ae upstream.
    
    There is a disparity in the context image saved to disk and our own
    bookkeeping - that is we presume the RING_HEAD and RING_TAIL match our
    stored ce->ring->tail value. However, as we emit WA_TAIL_DWORDS into the
    ring but may not tell the GPU about them, the GPU may be lagging behind
    our bookkeeping. Upon hibernation we do not save stolen pages, presuming
    that their contents are volatile. This means that although we start
    writing into the ring at tail, the GPU starts executing from its HEAD
    and there may be some garbage in between and so the GPU promptly hangs
    upon resume.
    
    Testcase: igt/gem_exec_suspend/basic-S4
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=96526
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20160921135108.29574-3-chris@chris-wilson.co.uk
    Cc: Eric Blau <eblau1@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

:040000 040000 95bbb2c9a0e5aba9a01dd955324c0323654a1afa d1f6c181e19a68a0f5b205ed6d7acab419f72c6f M	drivers


